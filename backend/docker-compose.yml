version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "4396:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - usercenter
      - media
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 3s
      timeout: 1s
      retries: 3
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network

  usercenter:
    build:
      context: .
      dockerfile: app/usercenter/Dockerfile
    ports:
      - "8888:8888"
    networks:
      - app-network
    depends_on:
      - redis
      - elasticsearch

  media:
    build:
      context: .
      dockerfile: app/media/Dockerfile
    ports:
      - "8889:8889"
    depends_on:
      redis:
        condition: service_started
      elasticsearch:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  audioanalysis:
    build:
      context: .
      dockerfile: app/audioanalysis/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./app/audioanalysis:/app/audioanalysis
    working_dir: /app/audioanalysis
    command: ["python", "consumer.py"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

networks:
  app-network:
    driver: bridge
